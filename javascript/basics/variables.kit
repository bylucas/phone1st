<!-- $title Variables -->
<!-- $SEO-title Variables in Modern Javascript -->
<!-- $description A variable is named storage for data. We use variables to store data that can be recalled when needed. -->
<!-- $keyword variables -->
<!-- $url variables.html -->

<!-- $class variables -->

<!-- @import ../includes/_header -->

<section class="main">

  <article class="post">

  <header class="post-header">
   
    <h1><!-- $title --></h1>

     <div class="post-meta">
         
        <span class="cat-links"><a href="basics.html">Basics</a></span>
      </div>
   
  </header>

  <div class="post-content">

    <p class="post-intro">A <em>variable</em> is named storage for data. We use variables to store data that can be recalled when needed.</p>

    <pre><code class="lang-js">const points = 100;
//using const will not allow the variable to be changed
//only use const if you know you will not need to change the variable

let age = 25;
//using let allows us to change the variable

age = 30;
//no need to add the let keyword when changing the same variable

var score = 25;
//this is the old type of variable but is still valid
//many developers still use var

//spaces are not allowed in variables
let myCount = 100; //this is ok
let my Count = 100; //this isn't ok

//variables can't start with a number
5mySpace = "100"; //this isn't allowed

//variables can't use keywords that are reserved for javascript
let const = 100; //this isn't allowed

//use camal-case to make variables clearer
let mySpace = 'big room'; //this works and looks neater
let myspace = 'big room'; //this also works
let MYSPACE = 'big room'; //and so does this

//comments
//single line comment
/*This is a
multi-line
block comment*/</code></pre>
    
  </div>
  
</article>

<!-- @import ../includes/_related-basics -->
 
</section>
<!-- @import ../includes/_footer -->

<!-- @import ../includes/_scripts2 -->
</div>
</body>

</html>
